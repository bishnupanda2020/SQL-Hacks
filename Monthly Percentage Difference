Given a table of purchases by date, calculate the month-over-month percentage change in revenue. The output should include the year-month date (YYYY-MM) and percentage change, rounded to the 2nd decimal point, and sorted from the beginning of the year to the end of the year.
The percentage change column will be populated from the 2nd month forward and can be calculated as ((this month's revenue - last month's revenue) / last month's revenue)*100.

Table: sf_transactions
id:
int
created_at:
datetime
value:
int
purchase_id:
int

------------------------------------------------------------------------------------------------------------------------------------------------------------
with base as (
select cast(extract(year from created_at) as varchar(4))
||
'-'
||
case 
when length(cast(extract(month from created_at ) as varchar(2) ) )=1 
then '0'|| cast(extract(month from created_at ) as varchar(2))
else cast(extract(month from created_at ) as varchar(2) )  end
as year_month,
sum(value) as revenue
from sf_transactions
group by 1
order by 1 asc
)
select year_month,
round((((revenue - lag(revenue,1) OVER (order by year_month asc))/ lag(revenue,1) OVER (order by year_month asc))*100),2) as percent_change
from base
order by 1 asc
